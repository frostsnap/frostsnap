import '../fetch.just'

default: gen lint

gen:
    #!/bin/sh
    input=./native/src/api.rs;
    canary_file=./binding-rerun.sha256
    flutter_rust_bridge_codegen \
        --rust-input native/src/api.rs \
        --dart-output lib/bridge_generated.dart \
        --c-output ios/Runner/bridge_generated.h \
        --extra-c-output-path macos/Runner/ \
        --dart-decl-output lib/bridge_definitions.dart \
        --wasm
    shasum -a256 $input > $canary_file

build TARGET="linux" +ARGS="":
    BUNDLE_FIRMWARE=1 flutter build {{TARGET}} {{ARGS}}

run +ARGS="": maybe-gen
    BUNDLE_FIRMWARE=1 flutter run {{ARGS}}

maybe-gen:
    #!/bin/sh
    input=./native/src/api.rs;
    canary_file=./binding-rerun.sha256
    if ! shasum -a256 --check $canary_file >/dev/null 2>&1 ; then
       echo "$input changed so re-running bindgen">&2;
       just gen
    fi

lint:
    cd native && cargo fmt
    dart format .

clean:
    flutter clean
    cd native && cargo clean

flutter_rust_bridge_version:
    #!/bin/sh
    flutter_rust_bridge_version=$(perl -0777 -nE '/name = "flutter_rust_bridge".*?version = "(.*?)"/s && print $1' < ../Cargo.lock)
    echo $flutter_rust_bridge_version

install-flutter-deps:
    #!/bin/sh
    flutter pub get

install-cargo-bins:
    #!/bin/sh
    flutter_rust_bridge_version=$(just flutter_rust_bridge_version)
    if ! test "$flutter_rust_bridge_version"; then
        echo "couldn't determine version for flutter_rust_bridge" >&2;
        exit 1
    fi
    cargo install cargo-ndk@3.5.4 espflash@3.2.0 cargo-expand@1.0.95 "flutter_rust_bridge_codegen@$flutter_rust_bridge_version"

serve *args='':
    flutter pub run flutter_rust_bridge:serve {{args}}

build-appimage +ARGS="":
   #!/bin/sh
   dir="appimage/AppDir"
   executable="$dir/usr/Frostsnapp"
   rm -rf "$dir"
   mkdir -p "$dir/usr"
   cp -r appimage/assets/* "$dir/"
   cp -rp build/linux/x64/release/bundle/* $dir/usr
   # github actions caching loses the 'u+x'
   chmod u+x "$executable"

   echo "final bundled libs:" >&2;
   ls -l $dir/usr/*

   just fetch https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage appimage/linuxdeploy
   chmod u+x appimage/linuxdeploy

   export LD_LIBRARY_PATH="$dir/usr/lib:${LD_LIBRARY_PATH:-}"
   appimage/linuxdeploy \
   --appdir $dir \
   --desktop-file "$dir/com.frostsnapp.app.desktop" \
   --icon-file "$dir/Frostsnapp.png" \
   --executable "$executable" \
   --output appimage

# vim:expandtab:sw=4:ts=4
