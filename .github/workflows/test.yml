name: Tests

on:
  push:
    branches:
      - master
  pull_request:
 
env:
  LIB_PACKAGES: -p frostsnap_comms -p frostsnap_core -p frostsnap_coordinator

jobs:
  device-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: ['blue', 'purple', 'frostypede']
    defaults:
      run:
        working-directory: ./device
    steps:
      - uses: actions/checkout@v3
      - name: Setup | RISC-V GCC prerequisites
        run: sudo apt-get install autoconf automake autotools-dev curl python3 libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev ninja-build
      - name: Setup | RISCV GCC
        run: |
          wget -nv https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2023.05.24/riscv32-elf-ubuntu-22.04-nightly-2023.05.24-nightly.tar.gz
          tar -zxf riscv32-elf-ubuntu-22.04-nightly-2023.05.24-nightly.tar.gz
          echo "PATH=$PATH:${GITHUB_WORKSPACE}/device/riscv/bin" >> $GITHUB_ENV
          ls ${GITHUB_WORKSPACE}/device/riscv/bin
      - uses: dtolnay/rust-toolchain@nightly
        with:
          targets: riscv32imc-unknown-none-elf
          components: clippy
      - run: cargo install ldproxy
      - run: cargo build --release --features ${{ matrix.board }} --bin ${{ matrix.board }}
      - run: cargo clippy -- -Dwarnings

  coordinator-cli-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./coordinator-cli
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - run: sudo apt-get install -y  libudev-dev
      - run: cargo test --release --all-features
      - run: cargo clippy -- -Dwarnings

  lib-tests:
    name: Library tests
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Test | Run tests
        run: RUSTFLAGS='-D warnings' cargo test --release $LIB_PACKAGES --all-features

  lib-lint:
    name: Library Lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt,clippy
      - run: cargo fmt --all -- --check
      - run: cargo clippy $LIB_PACKAGES -- -Dwarnings
