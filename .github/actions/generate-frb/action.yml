name: "Generate FRB Bridge Files"
description: "Caches and generates FRB bridge files"
inputs:
  version:
    description: "Version identifier for cache key"
    required: false
    default: "v0"
runs:
  using: "composite"
  steps:
    - name: Cache Generated FRB Files
      id: generate-frb
      uses: actions/cache@v4
      with:
        path: |
          ./frostsnapp/binding-rerun.sha256
          ./frostsnapp/lib/src/rust
          ./frostsnapp/rust/src/frb_generated.rs
        key: frb-files-${{ inputs.version }}-${{ hashFiles('frostsnapp/rust/src/api/**') }}

    - uses: dtolnay/rust-toolchain@stable
      if: steps.generate-frb.outputs.cache-hit != 'true'
      with:
        components: rustfmt # FRB needs this
    - name: "install libclang-dev" #FRB needs libclang-dev
      if: steps.generate-frb.outputs.cache-hit != 'true'
      shell: sh
      run: |
        sudo apt update
        sudo apt install -y libclang-dev

    - name: Set Up Flutter
      if: steps.generate-frb.outputs.cache-hit != 'true'
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        cache: true

    - uses: taiki-e/install-action@just
      if: steps.generate-frb.outputs.cache-hit != 'true'

    - uses: ./.github/actions/install-cargo-bins
      if: steps.generate-frb.outputs.cache-hit != 'true'

    - uses: ./.github/actions/fetch-dart-deps
      if: steps.generate-frb.outputs.cache-hit != 'true'

    - name: Generate FFI Files
      if: steps.generate-frb.outputs.cache-hit != 'true'
      run: just gen
      shell: sh
